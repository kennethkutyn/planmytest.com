import { Client, FetchOptions } from './types/client';
import { ExperimentUserProvider } from './types/provider';
import { ExperimentUser } from './types/user';
import { Variant, Variants } from './types/variant';
/**
 * A stub {@link Client} implementation that does nothing for all methods
 */
export declare class StubExperimentClient implements Client {
    getUser(): ExperimentUser;
    start(user?: ExperimentUser): Promise<void>;
    stop(): void;
    setUser(user: ExperimentUser): void;
    fetch(user?: ExperimentUser, options?: FetchOptions): Promise<StubExperimentClient>;
    getUserProvider(): ExperimentUserProvider;
    setUserProvider(uerProvider: ExperimentUserProvider): StubExperimentClient;
    variant(key: string, fallback?: string | Variant): Variant;
    all(): Variants;
    clear(): void;
    exposure(key: string): void;
}

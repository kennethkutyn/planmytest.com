import { RemoteConfigFetch } from '@amplitude/analytics-remote-config';
import { ILogger } from '@amplitude/analytics-core';
import { SessionReplayOptions } from '../typings/session-replay';
import { SessionReplayLocalConfig as ISessionReplayLocalConfig, PrivacyConfig, SessionReplayConfigs, SessionReplayRemoteConfig } from './types';
export declare const removeInvalidSelectorsFromPrivacyConfig: (privacyConfig: PrivacyConfig, loggerProvider: ILogger) => PrivacyConfig;
export declare class SessionReplayJoinedConfigGenerator {
    private readonly localConfig;
    private readonly remoteConfigFetch;
    constructor(remoteConfigFetch: RemoteConfigFetch<SessionReplayRemoteConfig>, localConfig: ISessionReplayLocalConfig);
    generateJoinedConfig(sessionId?: string | number): Promise<SessionReplayConfigs>;
}
export declare const createSessionReplayJoinedConfigGenerator: (apiKey: string, options: SessionReplayOptions) => Promise<SessionReplayJoinedConfigGenerator>;
//# sourceMappingURL=joined-config.d.ts.map
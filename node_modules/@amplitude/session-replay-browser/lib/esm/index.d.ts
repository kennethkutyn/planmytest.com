export declare const init: (apiKey: string, options: import("./typings/session-replay").SessionReplayOptions) => import("@amplitude/analytics-core").AmplitudeReturn<void>, setSessionId: (sessionId: string | number, deviceId?: string | undefined) => import("@amplitude/analytics-core").AmplitudeReturn<void>, getSessionId: () => string | number | undefined, getSessionReplayProperties: () => {
    [key: string]: string | boolean | null;
}, flush: (useRetry: boolean) => Promise<void>, shutdown: () => void, evaluateTargetingAndCapture: (targetingParams: Pick<import("@amplitude/targeting").TargetingParameters, "event" | "userProperties">, isInit?: boolean | undefined) => Promise<void>;
export { SessionReplayOptions, StoreType } from './typings/session-replay';
export { SafeLoggerProvider } from './logger';
export { AmplitudeSessionReplay } from './typings/session-replay';
//# sourceMappingURL=index.d.ts.map
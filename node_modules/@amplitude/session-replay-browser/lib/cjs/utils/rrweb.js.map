{"version":3,"file":"rrweb.js","sourceRoot":"","sources":["../../../src/utils/rrweb.ts"],"names":[],"mappings":";;;;AAAA,4DAA2D;AAC3D,+EAAyC;AAGzC,qFAAqF;AACrF,yDAAyD;AACzD,0BAA0B;AAC1B,SAAgB,eAAe,CAAC,GAAW;;IACzC,IAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC;IACzB,OAAO;QACL,IAAI,EAAE,GAAG,CAAC,gBAAgB;YACxB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU;YACjC,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,SAAS;gBAC/B,CAAC,CAAC,GAAG,CAAC,WAAW;gBACjB,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU;oBAC9B,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,MAAI,MAAA,qBAAG,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,0CAAE,UAAU,CAAA,CAAC;qBACtD,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,0CAAE,UAAU,CAAA;oBACrB,CAAC;QACL,GAAG,EAAE,GAAG,CAAC,gBAAgB;YACvB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,SAAS;YAChC,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,SAAS;gBAC/B,CAAC,CAAC,GAAG,CAAC,WAAW;gBACjB,CAAC,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,eAAe,CAAC,SAAS;oBAC9B,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,MAAI,MAAA,qBAAG,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,0CAAE,SAAS,CAAA,CAAC;qBACrD,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,0CAAE,SAAS,CAAA;oBACpB,CAAC;KACN,CAAC;AACJ,CAAC;AApBD,0CAoBC;AAED,SAAgB,eAAe;IAC7B,IAAM,WAAW,GAAG,IAAA,+BAAc,GAAE,CAAC;IACrC,OAAO,CACL,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW;QACxB,CAAC,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC;QACnE,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7C,CAAC,CACF,CAAC;AACJ,CAAC;AARD,0CAQC;AAED,SAAgB,cAAc;IAC5B,IAAM,WAAW,GAAG,IAAA,+BAAc,GAAE,CAAC;IACrC,OAAO,CACL,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,UAAU;QACvB,CAAC,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC;QAClE,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5C,CAAC,CACF,CAAC;AACJ,CAAC;AARD,wCAQC","sourcesContent":["import { getGlobalScope } from '@amplitude/analytics-core';\nimport dom from '@amplitude/rrweb-utils';\nimport type { eventWithTime, scrollCallback } from '@amplitude/rrweb-types';\n\n// These functions are not exposed in rrweb package, so we will define it here to use\n// Ignoring this function since this is copied from rrweb\n/* istanbul ignore next */\nexport function getWindowScroll(win: Window) {\n  const doc = win.document;\n  return {\n    left: doc.scrollingElement\n      ? doc.scrollingElement.scrollLeft\n      : win.pageXOffset !== undefined\n      ? win.pageXOffset\n      : doc.documentElement.scrollLeft ||\n        (doc?.body && dom.parentElement(doc.body)?.scrollLeft) ||\n        doc?.body?.scrollLeft ||\n        0,\n    top: doc.scrollingElement\n      ? doc.scrollingElement.scrollTop\n      : win.pageYOffset !== undefined\n      ? win.pageYOffset\n      : doc?.documentElement.scrollTop ||\n        (doc?.body && dom.parentElement(doc.body)?.scrollTop) ||\n        doc?.body?.scrollTop ||\n        0,\n  };\n}\n\nexport function getWindowHeight(): number {\n  const globalScope = getGlobalScope();\n  return (\n    globalScope?.innerHeight ||\n    (document.documentElement && document.documentElement.clientHeight) ||\n    (document.body && document.body.clientHeight) ||\n    0\n  );\n}\n\nexport function getWindowWidth(): number {\n  const globalScope = getGlobalScope();\n  return (\n    globalScope?.innerWidth ||\n    (document.documentElement && document.documentElement.clientWidth) ||\n    (document.body && document.body.clientWidth) ||\n    0\n  );\n}\n\nexport type Mirror = {\n  getNode: (id: number) => Node | null;\n};\n\nexport type RecordFunction = {\n  (options: {\n    emit: (event: eventWithTime) => void;\n    inlineStylesheet?: boolean;\n    hooks?: {\n      mouseInteraction?: any;\n      scroll?: scrollCallback;\n    };\n    maskAllInputs?: boolean;\n    maskTextClass?: string;\n    blockClass?: string;\n    blockSelector?: string;\n    maskInputFn?: (text: string, element: HTMLElement | null) => string;\n    maskTextFn?: (text: string, element: HTMLElement | null) => string;\n    maskTextSelector?: string;\n    recordCanvas?: boolean;\n    slimDOMOptions?: {\n      script?: boolean;\n      comment?: boolean;\n    };\n    errorHandler?: (error: unknown) => boolean;\n    plugins?: any[];\n    applyBackgroundColorToBlockedElements?: boolean;\n  }): (() => void) | undefined;\n  addCustomEvent: (eventName: string, eventData: any) => void;\n  mirror: Mirror;\n};\n"]}
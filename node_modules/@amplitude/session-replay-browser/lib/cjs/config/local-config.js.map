{"version":3,"file":"local-config.js","sourceRoot":"","sources":["../../../src/config/local-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { Config, Logger, FetchTransport, LogLevel } from '@amplitude/analytics-core';\nimport {\n  DEFAULT_PERFORMANCE_CONFIG,\n  DEFAULT_SAMPLE_RATE,\n  DEFAULT_SERVER_ZONE,\n  DEFAULT_URL_CHANGE_POLLING_INTERVAL,\n} from '../constants';\nimport { SessionReplayOptions, StoreType } from '../typings/session-replay';\nimport {\n  SessionReplayLocalConfig as ISessionReplayLocalConfig,\n  InteractionConfig,\n  PrivacyConfig,\n  SessionReplayPerformanceConfig,\n  SessionReplayVersion,\n} from './types';\nimport { SafeLoggerProvider } from '../logger';\nimport { validateUGCFilterRules } from '../helpers';\n\nexport const getDefaultConfig = () => ({\n  flushMaxRetries: 2,\n  logLevel: LogLevel.Warn,\n  loggerProvider: new Logger(),\n  transportProvider: new FetchTransport(),\n});\n\nexport class SessionReplayLocalConfig extends Config implements ISessionReplayLocalConfig {\n  apiKey: string;\n  sampleRate: number;\n  privacyConfig?: PrivacyConfig;\n  interactionConfig?: InteractionConfig;\n  debugMode?: boolean;\n  configServerUrl?: string;\n  trackServerUrl?: string;\n  shouldInlineStylesheet?: boolean;\n  version?: SessionReplayVersion;\n  storeType: StoreType;\n  performanceConfig?: SessionReplayPerformanceConfig;\n  experimental?: { useWebWorker: boolean };\n  applyBackgroundColorToBlockedElements?: boolean;\n  omitElementTags?: {\n    script?: boolean;\n    comment?: boolean;\n  };\n  enableUrlChangePolling?: boolean;\n  urlChangePollingInterval?: number;\n  captureDocumentTitle?: boolean;\n\n  constructor(apiKey: string, options: SessionReplayOptions) {\n    const defaultConfig = getDefaultConfig();\n    super({\n      transportProvider: defaultConfig.transportProvider,\n      loggerProvider: new SafeLoggerProvider(options.loggerProvider || defaultConfig.loggerProvider),\n      ...options,\n      apiKey,\n    });\n    this.flushMaxRetries =\n      options.flushMaxRetries !== undefined && options.flushMaxRetries <= defaultConfig.flushMaxRetries\n        ? options.flushMaxRetries\n        : defaultConfig.flushMaxRetries;\n\n    this.apiKey = apiKey;\n    this.sampleRate = options.sampleRate || DEFAULT_SAMPLE_RATE;\n    this.serverZone = options.serverZone || DEFAULT_SERVER_ZONE;\n    this.configServerUrl = options.configServerUrl;\n    this.trackServerUrl = options.trackServerUrl;\n    this.shouldInlineStylesheet = options.shouldInlineStylesheet;\n    this.version = options.version;\n    this.performanceConfig = options.performanceConfig || DEFAULT_PERFORMANCE_CONFIG;\n    this.storeType = options.storeType ?? 'idb';\n    this.applyBackgroundColorToBlockedElements = options.applyBackgroundColorToBlockedElements ?? false;\n    this.enableUrlChangePolling = options.enableUrlChangePolling ?? false;\n    this.urlChangePollingInterval = options.urlChangePollingInterval ?? DEFAULT_URL_CHANGE_POLLING_INTERVAL;\n    this.captureDocumentTitle = options.captureDocumentTitle ?? false;\n\n    if (options.privacyConfig) {\n      this.privacyConfig = options.privacyConfig;\n    }\n    if (options.interactionConfig) {\n      this.interactionConfig = options.interactionConfig;\n\n      // validate ugcFilterRules, throw error if invalid - throw error at the beginning of the config\n      if (this.interactionConfig.ugcFilterRules) {\n        validateUGCFilterRules(this.interactionConfig.ugcFilterRules);\n      }\n    }\n    if (options.debugMode) {\n      this.debugMode = options.debugMode;\n    }\n    if (options.experimental) {\n      this.experimental = options.experimental;\n    }\n    if (options.omitElementTags) {\n      this.omitElementTags = options.omitElementTags;\n    }\n  }\n}\n"]}
import type { mouseInteractionCallBack } from '@amplitude/rrweb-types';
import { Mirror } from '../utils/rrweb';
import { SessionReplayEventsManager as AmplitudeSessionReplayEventsManager } from '../typings/session-replay';
import { PayloadBatcher } from 'src/track-destination';
import { ILogger } from '@amplitude/analytics-core';
import { UGCFilterRule } from 'src/config/types';
export type ClickEvent = {
    timestamp: number;
    x: number;
    y: number;
    viewportWidth: number;
    viewportHeight: number;
    pageUrl: string;
    selector?: string;
    type: 'click';
};
export type ClickEventWithCount = ClickEvent & {
    count: number;
};
type Options = {
    sessionId: string | number;
    deviceIdFn: () => string | undefined;
    eventsManager: AmplitudeSessionReplayEventsManager<'interaction', string>;
    mirror: Mirror;
    ugcFilterRules: UGCFilterRule[];
};
export declare const clickNonBatcher: PayloadBatcher;
export declare const clickBatcher: PayloadBatcher;
export declare const clickHook: (logger: ILogger, options: Options) => mouseInteractionCallBack;
export {};
//# sourceMappingURL=click.d.ts.map
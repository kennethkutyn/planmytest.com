{"version":3,"file":"observables.js","sourceRoot":"","sources":["../../src/observables.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAE7C;;GAEG;AACH,MAAM,CAAC,IAAM,wBAAwB,GAAG;IACtC,OAAO,IAAI,UAAU,CAAmB,UAAC,QAAQ;QAC/C,IAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,UAAC,SAAS;YACtD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtC,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QACH,OAAO,cAAM,OAAA,gBAAgB,CAAC,UAAU,EAAE,EAA7B,CAA6B,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,IAAM,qBAAqB,GAAG,UACnC,SAA4C;IAA5C,0BAAA,EAAA,mBAA4C;IAE5C,OAAO,SAAS,CAAa,QAAQ,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AACvE,CAAC,CAAC","sourcesContent":["import { Observable, fromEvent } from 'rxjs';\n\n/**\n * Creates an observable that tracks DOM mutations on the document body.\n */\nexport const createMutationObservable = (): Observable<MutationRecord[]> => {\n  return new Observable<MutationRecord[]>((observer) => {\n    const mutationObserver = new MutationObserver((mutations) => {\n      observer.next(mutations);\n    });\n    mutationObserver.observe(document.body, {\n      childList: true,\n      attributes: true,\n      characterData: true,\n      subtree: true,\n    });\n    return () => mutationObserver.disconnect();\n  });\n};\n\n/**\n * Creates an observable that tracks click events on the document.\n * @param clickType - The type of click event to track (click or pointerdown)\n */\nexport const createClickObservable = (\n  clickType: 'click' | 'pointerdown' = 'click',\n): Observable<MouseEvent | PointerEvent> => {\n  return fromEvent<MouseEvent>(document, clickType, { capture: true });\n};\n"]}
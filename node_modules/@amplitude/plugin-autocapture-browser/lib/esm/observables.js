import { Observable, fromEvent } from 'rxjs';
/**
 * Creates an observable that tracks DOM mutations on the document body.
 */
export var createMutationObservable = function () {
    return new Observable(function (observer) {
        var mutationObserver = new MutationObserver(function (mutations) {
            observer.next(mutations);
        });
        mutationObserver.observe(document.body, {
            childList: true,
            attributes: true,
            characterData: true,
            subtree: true,
        });
        return function () { return mutationObserver.disconnect(); };
    });
};
/**
 * Creates an observable that tracks click events on the document.
 * @param clickType - The type of click event to track (click or pointerdown)
 */
export var createClickObservable = function (clickType) {
    if (clickType === void 0) { clickType = 'click'; }
    return fromEvent(document, clickType, { capture: true });
};
//# sourceMappingURL=observables.js.map
{"version":3,"file":"track-change.js","sourceRoot":"","sources":["../../../src/autocapture/track-change.ts"],"names":[],"mappings":";;;AAEA,6BAAmC;AAEnC,sCAA2E;AAC3E,0CAA+D;AAE/D,SAAgB,WAAW,CAAC,EAY3B;QAXC,SAAS,eAAA,EACT,cAAc,oBAAA,EACd,kBAAkB,wBAAA,EAClB,gBAAgB,sBAAA,EAChB,gBAAgB,sBAAA;IAQR,IAAA,gBAAgB,GAAK,cAAc,iBAAnB,CAAoB;IAE5C,IAAM,wBAAwB,GAAG,gBAAgB,CAAC,IAAI,CACpD,IAAA,aAAM,EAAC,qCAA2B,CAAC,EACnC,IAAA,aAAM,EAAC,UAAC,WAAW;QACjB,wDAAwD;QACxD,OAAO,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,sBAAsB,CAAC,CAAC;IACxE,CAAC,CAAC,EACF,IAAA,UAAG,EAAC,UAAC,WAAW,IAAK,OAAA,gBAAgB,CAAC,WAAW,CAAC,EAA7B,CAA6B,CAAC,CACpD,CAAC;IAEF,OAAO,wBAAwB,CAAC,SAAS,CAAC,UAAC,WAAW;QACpD,0BAA0B;QAC1B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,CAAC,2CAA+B,EAAE,kBAAkB,CAAC,QAAQ,EAAE,WAAW,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACtH,CAAC,CAAC,CAAC;AACL,CAAC;AA5BD,kCA4BC","sourcesContent":["import { AllWindowObservables } from 'src/autocapture-plugin';\nimport { type evaluateTriggersFn } from 'src/helpers';\nimport { filter, map } from 'rxjs';\nimport { BrowserClient, ActionType } from '@amplitude/analytics-core';\nimport { filterOutNonTrackableEvents, shouldTrackEvent } from '../helpers';\nimport { AMPLITUDE_ELEMENT_CHANGED_EVENT } from '../constants';\n\nexport function trackChange({\n  amplitude,\n  allObservables,\n  getEventProperties,\n  shouldTrackEvent,\n  evaluateTriggers,\n}: {\n  amplitude: BrowserClient;\n  allObservables: AllWindowObservables;\n  getEventProperties: (actionType: ActionType, element: Element) => Record<string, any>;\n  shouldTrackEvent: shouldTrackEvent;\n  evaluateTriggers: evaluateTriggersFn;\n}) {\n  const { changeObservable } = allObservables;\n\n  const filteredChangeObservable = changeObservable.pipe(\n    filter(filterOutNonTrackableEvents),\n    filter((changeEvent) => {\n      // Only track change on elements that should be tracked,\n      return shouldTrackEvent('change', changeEvent.closestTrackedAncestor);\n    }),\n    map((changeEvent) => evaluateTriggers(changeEvent)),\n  );\n\n  return filteredChangeObservable.subscribe((changeEvent) => {\n    /* istanbul ignore next */\n    amplitude?.track(AMPLITUDE_ELEMENT_CHANGED_EVENT, getEventProperties('change', changeEvent.closestTrackedAncestor));\n  });\n}\n"]}
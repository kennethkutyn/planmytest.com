{"version":3,"file":"track-rage-click.js","sourceRoot":"","sources":["../../../src/autocapture/track-rage-click.ts"],"names":[],"mappings":"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","sourcesContent":["import { AllWindowObservables } from 'src/autocapture-plugin';\nimport { filter, map } from 'rxjs';\nimport { BrowserClient } from '@amplitude/analytics-core';\nimport { filterOutNonTrackableEvents, shouldTrackEvent } from '../helpers';\nimport { AMPLITUDE_ELEMENT_RAGE_CLICKED_EVENT } from '../constants';\nimport {\n  DEFAULT_RAGE_CLICK_THRESHOLD,\n  DEFAULT_RAGE_CLICK_WINDOW_MS,\n  DEFAULT_RAGE_CLICK_OUT_OF_BOUNDS_THRESHOLD,\n} from '@amplitude/analytics-core';\n\nconst RAGE_CLICK_THRESHOLD = DEFAULT_RAGE_CLICK_THRESHOLD;\nconst RAGE_CLICK_WINDOW_MS = DEFAULT_RAGE_CLICK_WINDOW_MS;\nconst RAGE_CLICK_OUT_OF_BOUNDS_THRESHOLD = DEFAULT_RAGE_CLICK_OUT_OF_BOUNDS_THRESHOLD;\n\ntype Click = {\n  X: number;\n  Y: number;\n  Time: number;\n};\n\ntype EventRageClick = {\n  '[Amplitude] Begin Time': string; // ISO-8601\n  '[Amplitude] End Time': string; // ISO-8601\n  '[Amplitude] Duration': number;\n  '[Amplitude] Clicks': Array<Click>;\n  '[Amplitude] Click Count': number;\n};\n\ntype ClickEvent = {\n  event: MouseEvent | Event;\n  timestamp: number;\n  targetElementProperties: Record<string, any>;\n  closestTrackedAncestor: Element | null;\n};\n\ntype ClickRegionBoundingBox = {\n  yMin?: number;\n  yMax?: number;\n  xMin?: number;\n  xMax?: number;\n  isOutOfBounds?: boolean;\n};\n\nfunction addCoordinates(regionBox: ClickRegionBoundingBox, click: ClickEvent) {\n  const { clientX, clientY } = click.event as MouseEvent;\n  regionBox.yMin = Math.min(regionBox.yMin ?? clientY, clientY);\n  regionBox.yMax = Math.max(regionBox.yMax ?? clientY, clientY);\n  regionBox.xMin = Math.min(regionBox.xMin ?? clientX, clientX);\n  regionBox.xMax = Math.max(regionBox.xMax ?? clientX, clientX);\n  regionBox.isOutOfBounds =\n    regionBox.yMax - regionBox.yMin > RAGE_CLICK_OUT_OF_BOUNDS_THRESHOLD ||\n    regionBox.xMax - regionBox.xMin > RAGE_CLICK_OUT_OF_BOUNDS_THRESHOLD;\n}\n\nfunction getRageClickAnalyticsEvent(clickWindow: ClickEvent[]) {\n  const firstClick = clickWindow[0];\n  const lastClick = clickWindow[clickWindow.length - 1];\n\n  const rageClickEvent: EventRageClick = {\n    '[Amplitude] Begin Time': new Date(firstClick.timestamp).toISOString(),\n    '[Amplitude] End Time': new Date(lastClick.timestamp).toISOString(),\n    '[Amplitude] Duration': lastClick.timestamp - firstClick.timestamp,\n    '[Amplitude] Clicks': clickWindow.map((click) => ({\n      X: (click.event as MouseEvent).clientX,\n      Y: (click.event as MouseEvent).clientY,\n      Time: click.timestamp,\n    })),\n    '[Amplitude] Click Count': clickWindow.length,\n    ...firstClick.targetElementProperties,\n  };\n\n  return { rageClickEvent, time: firstClick.timestamp };\n}\n\nfunction isClickOutsideRageClickWindow(clickWindow: ClickEvent[], click: ClickEvent) {\n  const firstIndex = Math.max(0, clickWindow.length - RAGE_CLICK_THRESHOLD + 1);\n  const firstClick = clickWindow[firstIndex];\n  return click.timestamp - firstClick.timestamp >= RAGE_CLICK_WINDOW_MS;\n}\n\nfunction isNewElement(clickWindow: ClickEvent[], click: ClickEvent) {\n  return (\n    clickWindow.length > 0 &&\n    clickWindow[clickWindow.length - 1].closestTrackedAncestor !== click.closestTrackedAncestor\n  );\n}\n\nexport function trackRageClicks({\n  amplitude,\n  allObservables,\n  shouldTrackRageClick,\n}: {\n  amplitude: BrowserClient;\n  allObservables: AllWindowObservables;\n  shouldTrackRageClick: shouldTrackEvent;\n}) {\n  const { clickObservable } = allObservables;\n\n  // Keep track of all clicks within the sliding window\n  let clickWindow: ClickEvent[] = [];\n\n  // Keep track of the region box for all clicks, to determine when a rage click is out of bounds\n  let clickBoundingBox: ClickRegionBoundingBox = {};\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let triggerRageClickTimeout: any;\n\n  // helper function to reset the click window and region box\n  function resetClickWindow(click?: ClickEvent) {\n    clickWindow = [];\n    clickBoundingBox = {};\n    if (click) {\n      addCoordinates(clickBoundingBox, click);\n      clickWindow.push(click);\n    }\n  }\n\n  return clickObservable\n    .pipe(\n      filter(filterOutNonTrackableEvents),\n      filter((click) => {\n        return shouldTrackRageClick('click', click.closestTrackedAncestor);\n      }),\n      map((click) => {\n        // reset the click wait timer if it exists\n        if (triggerRageClickTimeout) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          clearTimeout(triggerRageClickTimeout);\n        }\n\n        // add click to bounding box\n        addCoordinates(clickBoundingBox, click);\n\n        // if there's just one click in the window, add it and return\n        if (clickWindow.length === 0) {\n          clickWindow.push(click);\n          return null;\n        }\n\n        // if current click is:\n        //  1. outside the rage click window\n        //  2. on a new element\n        //  3. out of bounds\n        // then start a new click window\n        if (\n          isNewElement(clickWindow, click) ||\n          isClickOutsideRageClickWindow(clickWindow, click) ||\n          clickBoundingBox.isOutOfBounds\n        ) {\n          const returnValue =\n            clickWindow.length >= RAGE_CLICK_THRESHOLD ? getRageClickAnalyticsEvent(clickWindow) : null;\n          resetClickWindow(click);\n          return returnValue;\n        }\n\n        // add click to current window\n        clickWindow.push(click);\n\n        // if we have enough clicks to be a rage click, set a timout to trigger the rage\n        // click event after the time threshold is reached.\n        // This will be cancelled if a new click is tracked.\n        if (clickWindow.length >= RAGE_CLICK_THRESHOLD) {\n          triggerRageClickTimeout = setTimeout(() => {\n            const { rageClickEvent, time } = getRageClickAnalyticsEvent(clickWindow);\n            amplitude.track(AMPLITUDE_ELEMENT_RAGE_CLICKED_EVENT, rageClickEvent, { time });\n            resetClickWindow();\n          }, RAGE_CLICK_WINDOW_MS);\n        }\n\n        return null;\n      }),\n      filter((result) => result !== null),\n    )\n    .subscribe((data: { rageClickEvent: EventRageClick; time: number } | null) => {\n      /* istanbul ignore if */\n      if (data === null) {\n        return;\n      }\n      amplitude.track(AMPLITUDE_ELEMENT_RAGE_CLICKED_EVENT, data.rageClickEvent, { time: data.time });\n    });\n}\n"]}
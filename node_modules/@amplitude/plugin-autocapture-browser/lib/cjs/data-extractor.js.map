{"version":3,"file":"data-extractor.js","sourceRoot":"","sources":["../../src/data-extractor.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-globals */\nimport type { ElementInteractionsOptions, ActionType } from '@amplitude/analytics-core';\nimport type { DataSource } from '@amplitude/analytics-core/lib/esm/types/element-interactions';\nimport * as constants from './constants';\nimport {\n  removeEmptyProperties,\n  extractPrefixedAttributes,\n  isElementPointerCursor,\n  getClosestElement,\n  isElementBasedEvent,\n  parseAttributesToMask,\n} from './helpers';\nimport type { BaseTimestampedEvent, ElementBasedTimestampedEvent, TimestampedEvent } from './helpers';\nimport { getAncestors, getElementProperties } from './hierarchy';\nimport type { JSONValue } from './helpers';\nimport { getDataSource } from './pageActions/actions';\nimport { Hierarchy } from './typings/autocapture';\n\nconst CC_REGEX = /\\b(?:\\d[ -]*?){13,16}\\b/;\nconst SSN_REGEX = /(\\d{3}-?\\d{2}-?\\d{4})/g;\nconst EMAIL_REGEX = /[^\\s@]+@[^\\s@.]+\\.[^\\s@]+/g;\n\nexport class DataExtractor {\n  private readonly additionalMaskTextPatterns: RegExp[];\n\n  constructor(options: ElementInteractionsOptions) {\n    const rawPatterns = options.maskTextRegex ?? [];\n\n    const compiled: RegExp[] = [];\n    for (const entry of rawPatterns) {\n      if (compiled.length >= constants.MAX_MASK_TEXT_PATTERNS) {\n        break;\n      }\n      if (entry instanceof RegExp) {\n        compiled.push(entry);\n      } else if ('pattern' in entry && typeof entry.pattern === 'string') {\n        try {\n          compiled.push(new RegExp(entry.pattern, 'i'));\n        } catch {\n          // ignore invalid pattern strings\n        }\n      }\n    }\n    this.additionalMaskTextPatterns = compiled;\n  }\n\n  replaceSensitiveString = (text: string | null): string => {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    let result = text;\n\n    // Check for credit card number (with or without spaces/dashes)\n    result = result.replace(CC_REGEX, constants.MASKED_TEXT_VALUE);\n\n    // Check for social security number\n    result = result.replace(SSN_REGEX, constants.MASKED_TEXT_VALUE);\n\n    // Check for email\n    result = result.replace(EMAIL_REGEX, constants.MASKED_TEXT_VALUE);\n\n    // Check for additional mask text patterns\n    for (const pattern of this.additionalMaskTextPatterns) {\n      try {\n        result = result.replace(pattern, constants.MASKED_TEXT_VALUE);\n      } catch {\n        // ignore invalid pattern\n      }\n    }\n\n    return result;\n  };\n\n  // Get the DOM hierarchy of the element, starting from the target element to the root element.\n  getHierarchy = (element: Element | null): Hierarchy => {\n    let hierarchy: Hierarchy = [];\n    if (!element) {\n      return [];\n    }\n\n    // Get list of ancestors including itself and get properties at each level in the hierarchy\n    const ancestors = getAncestors(element);\n\n    // Build attributes to mask map\n    const elementToAttributesToMaskMap = new Map<Element, Set<string>>();\n\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n      const node = ancestors[i];\n      if (node) {\n        const attributesToMask = parseAttributesToMask(node.getAttribute(constants.DATA_AMP_MASK_ATTRIBUTES));\n        const ancestorAttributesToMask =\n          i === ancestors.length - 1 ? [] : elementToAttributesToMaskMap.get(ancestors[i + 1]) ?? new Set<string>();\n        const combinedAttributesToMask = new Set([...ancestorAttributesToMask, ...attributesToMask]);\n        elementToAttributesToMaskMap.set(node, combinedAttributesToMask);\n      }\n    }\n\n    hierarchy = ancestors.map((el) =>\n      getElementProperties(el, elementToAttributesToMaskMap.get(el) ?? new Set<string>()),\n    );\n\n    // Search for and mask any sensitive attribute values\n    for (const hierarchyNode of hierarchy) {\n      if (hierarchyNode?.attrs) {\n        Object.entries(hierarchyNode.attrs).forEach(([key, value]) => {\n          if (hierarchyNode.attrs) {\n            hierarchyNode.attrs[key] = this.replaceSensitiveString(value);\n          }\n        });\n      }\n    }\n\n    return hierarchy;\n  };\n\n  getNearestLabel = (element: Element): string => {\n    const parent = element.parentElement;\n    if (!parent) {\n      return '';\n    }\n    let labelElement: Element | null;\n    try {\n      labelElement = parent.querySelector(':scope>span,h1,h2,h3,h4,h5,h6');\n    } catch {\n      /* istanbul ignore next */\n      labelElement = null;\n    }\n    if (labelElement) {\n      /* istanbul ignore next */\n      return this.getText(labelElement);\n    }\n    return this.getNearestLabel(parent);\n  };\n\n  // Returns the Amplitude event properties for the given element.\n  getEventProperties = (actionType: ActionType, element: Element, dataAttributePrefix: string) => {\n    /* istanbul ignore next */\n    const tag = element?.tagName?.toLowerCase?.();\n    /* istanbul ignore next */\n    const rect =\n      typeof element.getBoundingClientRect === 'function' ? element.getBoundingClientRect() : { left: null, top: null };\n\n    const hierarchy = this.getHierarchy(element);\n    const currentElementAttributes = hierarchy[0]?.attrs;\n    const nearestLabel = this.getNearestLabel(element);\n    const attributes = extractPrefixedAttributes(currentElementAttributes ?? {}, dataAttributePrefix);\n\n    /* istanbul ignore next */\n    const properties: Record<string, any> = {\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_HIERARCHY]: hierarchy,\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_TAG]: tag,\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_TEXT]: this.getText(element),\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_POSITION_LEFT]: rect.left == null ? null : Math.round(rect.left),\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_POSITION_TOP]: rect.top == null ? null : Math.round(rect.top),\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_ATTRIBUTES]: attributes,\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_PARENT_LABEL]: nearestLabel,\n      [constants.AMPLITUDE_EVENT_PROP_PAGE_URL]: window.location.href.split('?')[0],\n      [constants.AMPLITUDE_EVENT_PROP_PAGE_TITLE]:\n        (typeof document !== 'undefined' && this.replaceSensitiveString(document.title)) || '',\n      [constants.AMPLITUDE_EVENT_PROP_VIEWPORT_HEIGHT]: window.innerHeight,\n      [constants.AMPLITUDE_EVENT_PROP_VIEWPORT_WIDTH]: window.innerWidth,\n    };\n\n    // id is never masked, so always include it\n    properties[constants.AMPLITUDE_EVENT_PROP_ELEMENT_ID] = element.getAttribute('id') || '';\n\n    // class is never masked, so always include it\n    properties[constants.AMPLITUDE_EVENT_PROP_ELEMENT_CLASS] = element.getAttribute('class');\n\n    properties[constants.AMPLITUDE_EVENT_PROP_ELEMENT_ARIA_LABEL] = currentElementAttributes?.['aria-label'];\n\n    if (tag === 'a' && actionType === 'click' && element instanceof HTMLAnchorElement) {\n      properties[constants.AMPLITUDE_EVENT_PROP_ELEMENT_HREF] = this.replaceSensitiveString(element.href); // we don't use hierarchy here because we don't want href value to be changed\n    }\n\n    return removeEmptyProperties(properties);\n  };\n\n  addAdditionalEventProperties = <T>(\n    event: T,\n    type: TimestampedEvent<T>['type'],\n    selectorAllowlist: string[],\n    dataAttributePrefix: string,\n    // capture the event if the cursor is a \"pointer\" when this element is clicked on\n    // reason: a \"pointer\" cursor indicates that an element should be interactable\n    //         regardless of the element's tag name\n    isCapturingCursorPointer = false,\n  ): TimestampedEvent<T> | ElementBasedTimestampedEvent<T> => {\n    const baseEvent: BaseTimestampedEvent<T> | ElementBasedTimestampedEvent<T> = {\n      event,\n      timestamp: Date.now(),\n      type,\n    };\n\n    if (isElementBasedEvent(baseEvent) && baseEvent.event.target !== null) {\n      if (isCapturingCursorPointer) {\n        const isCursorPointer = isElementPointerCursor(baseEvent.event.target as Element, baseEvent.type);\n        if (isCursorPointer) {\n          baseEvent.closestTrackedAncestor = baseEvent.event.target as HTMLElement;\n          baseEvent.targetElementProperties = this.getEventProperties(\n            baseEvent.type,\n            baseEvent.closestTrackedAncestor,\n            dataAttributePrefix,\n          );\n          return baseEvent;\n        }\n      }\n      // Retrieve additional event properties from the target element\n      const closestTrackedAncestor = getClosestElement(baseEvent.event.target as HTMLElement, selectorAllowlist);\n      if (closestTrackedAncestor) {\n        baseEvent.closestTrackedAncestor = closestTrackedAncestor;\n        baseEvent.targetElementProperties = this.getEventProperties(\n          baseEvent.type,\n          closestTrackedAncestor,\n          dataAttributePrefix,\n        );\n      }\n      return baseEvent;\n    }\n\n    return baseEvent;\n  };\n\n  extractDataFromDataSource = (dataSource: DataSource, contextElement: HTMLElement) => {\n    // Extract from DOM Element\n    if (dataSource.sourceType === 'DOM_ELEMENT') {\n      const sourceElement = getDataSource(dataSource, contextElement);\n      if (!sourceElement) {\n        return undefined;\n      }\n\n      if (dataSource.elementExtractType === 'TEXT') {\n        return this.getText(sourceElement);\n      } else if (dataSource.elementExtractType === 'ATTRIBUTE' && dataSource.attribute) {\n        return sourceElement.getAttribute(dataSource.attribute);\n      }\n      return undefined;\n    }\n\n    // TODO: Extract from other source types\n    return undefined;\n  };\n\n  getText = (element: Element): string => {\n    // Check if element or any parent has data-amp-mask attribute\n    const hasMaskAttribute = element.closest(`[${constants.TEXT_MASK_ATTRIBUTE}]`) !== null;\n    if (hasMaskAttribute) {\n      return constants.MASKED_TEXT_VALUE;\n    }\n    let output = '';\n    if (!element.querySelector(`[${constants.TEXT_MASK_ATTRIBUTE}], [contenteditable]`)) {\n      output = (element as HTMLElement).innerText || '';\n    } else {\n      const clonedTree = element.cloneNode(true) as HTMLElement;\n      // replace all elements with TEXT_MASK_ATTRIBUTE attribute and contenteditable with the text MASKED_TEXT_VALUE\n      clonedTree.querySelectorAll(`[${constants.TEXT_MASK_ATTRIBUTE}], [contenteditable]`).forEach((node) => {\n        (node as HTMLElement).innerText = constants.MASKED_TEXT_VALUE;\n      });\n      output = clonedTree.innerText || '';\n    }\n    return this.replaceSensitiveString(output.substring(0, 255)).replace(/\\s+/g, ' ').trim();\n  };\n\n  // Returns the element properties for the given element in Visual Labeling.\n  getEventTagProps = (element: Element): Record<string, JSONValue> => {\n    if (!element) {\n      return {};\n    }\n    /* istanbul ignore next */\n    const tag = element?.tagName?.toLowerCase?.();\n\n    const properties = {\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_TAG]: tag,\n      [constants.AMPLITUDE_EVENT_PROP_ELEMENT_TEXT]: this.getText(element),\n      [constants.AMPLITUDE_EVENT_PROP_PAGE_URL]: window.location.href.split('?')[0],\n    };\n    return removeEmptyProperties(properties) as Record<string, JSONValue>;\n  };\n}\n"]}
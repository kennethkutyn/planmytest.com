import type { ElementInteractionsOptions, ActionType } from '@amplitude/analytics-core';
import type { DataSource } from '@amplitude/analytics-core/lib/esm/types/element-interactions';
import type { ElementBasedTimestampedEvent, TimestampedEvent } from './helpers';
import type { JSONValue } from './helpers';
import { Hierarchy } from './typings/autocapture';
export declare class DataExtractor {
    private readonly additionalMaskTextPatterns;
    constructor(options: ElementInteractionsOptions);
    replaceSensitiveString: (text: string | null) => string;
    getHierarchy: (element: Element | null) => Hierarchy;
    getNearestLabel: (element: Element) => string;
    getEventProperties: (actionType: ActionType, element: Element, dataAttributePrefix: string) => {
        [key: string]: unknown;
    };
    addAdditionalEventProperties: <T>(event: T, type: "click" | "change" | "rage" | "error" | "navigate" | "mutation", selectorAllowlist: string[], dataAttributePrefix: string, isCapturingCursorPointer?: boolean) => TimestampedEvent<T>;
    extractDataFromDataSource: (dataSource: DataSource, contextElement: HTMLElement) => string | null | undefined;
    getText: (element: Element) => string;
    getEventTagProps: (element: Element) => Record<string, JSONValue>;
}
//# sourceMappingURL=data-extractor.d.ts.map
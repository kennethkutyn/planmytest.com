{"version":3,"file":"targeting.js","sourceRoot":"","sources":["../../src/targeting.ts"],"names":[],"mappings":";;;AAAA,8DAA8D;AAC9D,6DAA0D;AAG1D;IAGE;QAAA,iBAEC;QAED,sBAAiB,GAAG,UAAO,EAQL;gBAPpB,MAAM,YAAA,EACN,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,SAAS,eAAA,EACT,cAAc,oBAAA,EACd,QAAQ,cAAA,EACR,IAAI,UAAA;;;;;;iCAGF,CAAA,KAAK,IAAI,KAAK,CAAC,IAAI,CAAA,EAAnB,wBAAmB;4BACf,qBAAM,uCAAiB,CAAC,wBAAwB,CAAC;oCAC/C,cAAc,EAAE,cAAc;oCAC9B,MAAM,EAAE,MAAM;oCACd,SAAS,WAAA;oCACT,SAAS,EAAE,KAAK,CAAC,UAAU;oCAC3B,SAAS,EAAE,KAAK,CAAC,IAAI;iCACtB,CAAC,EAAA;;4BANF,KAAA,SAME,CAAA;;;4BACF,KAAA,SAAS,CAAA;;;4BATT,UAAU,KASD;4BAET,YAAY,GAAG,UAAU,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;4BAE9D,OAAO,GAAG;gCACd,UAAU,EAAE,SAAS;gCACrB,KAAK,OAAA;gCACL,WAAW,EAAE,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;gCACrD,IAAI,EAAE;oCACJ,SAAS,EAAE,QAAQ;oCACnB,eAAe,EAAE,cAAc;iCAChC;6BACF,CAAC;4BACI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;4BACxE,sBAAO,eAAe,EAAC;;;;SACxB,CAAC;QApCA,IAAI,CAAC,gBAAgB,GAAG,IAAI,kCAAgB,EAAE,CAAC;IACjD,CAAC;IAoCH,gBAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,8BAAS","sourcesContent":["import { EvaluationEngine } from '@amplitude/experiment-core';\nimport { targetingIDBStore } from './targeting-idb-store';\nimport { Targeting as AmplitudeTargeting, TargetingParameters } from './typings/targeting';\n\nexport class Targeting implements AmplitudeTargeting {\n  evaluationEngine: EvaluationEngine;\n\n  constructor() {\n    this.evaluationEngine = new EvaluationEngine();\n  }\n\n  evaluateTargeting = async ({\n    apiKey,\n    loggerProvider,\n    event,\n    sessionId,\n    userProperties,\n    deviceId,\n    flag,\n  }: TargetingParameters) => {\n    const eventTypes =\n      event && event.time\n        ? await targetingIDBStore.storeEventTypeForSession({\n            loggerProvider: loggerProvider,\n            apiKey: apiKey,\n            sessionId,\n            eventType: event.event_type,\n            eventTime: event.time,\n          })\n        : undefined;\n\n    const eventStrings = eventTypes && new Set(Object.keys(eventTypes));\n\n    const context = {\n      session_id: sessionId,\n      event,\n      event_types: eventStrings && Array.from(eventStrings),\n      user: {\n        device_id: deviceId,\n        user_properties: userProperties,\n      },\n    };\n    const targetingBucket = this.evaluationEngine.evaluate(context, [flag]);\n    return targetingBucket;\n  };\n}\n"]}
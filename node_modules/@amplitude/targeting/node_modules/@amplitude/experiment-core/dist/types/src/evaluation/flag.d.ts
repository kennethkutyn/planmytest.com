export type EvaluationFlag = {
    key: string;
    variants: Record<string, EvaluationVariant>;
    segments: EvaluationSegment[];
    dependencies?: string[];
    metadata?: Record<string, unknown>;
};
export type EvaluationVariant = {
    key?: string;
    value?: unknown;
    payload?: unknown;
    metadata?: Record<string, unknown>;
};
export type EvaluationSegment = {
    bucket?: EvaluationBucket;
    conditions?: EvaluationCondition[][];
    variant?: string;
    metadata?: Record<string, unknown>;
};
export type EvaluationBucket = {
    selector: string[];
    salt: string;
    allocations: EvaluationAllocation[];
};
export type EvaluationCondition = {
    selector: string[];
    op: string;
    values: string[];
};
export type EvaluationAllocation = {
    range: number[];
    distributions: EvaluationDistribution[];
};
export type EvaluationDistribution = {
    variant: string;
    range: number[];
};
export declare const EvaluationOperator: {
    IS: string;
    IS_NOT: string;
    CONTAINS: string;
    DOES_NOT_CONTAIN: string;
    LESS_THAN: string;
    LESS_THAN_EQUALS: string;
    GREATER_THAN: string;
    GREATER_THAN_EQUALS: string;
    VERSION_LESS_THAN: string;
    VERSION_LESS_THAN_EQUALS: string;
    VERSION_GREATER_THAN: string;
    VERSION_GREATER_THAN_EQUALS: string;
    SET_IS: string;
    SET_IS_NOT: string;
    SET_CONTAINS: string;
    SET_DOES_NOT_CONTAIN: string;
    SET_CONTAINS_ANY: string;
    SET_DOES_NOT_CONTAIN_ANY: string;
    REGEX_MATCH: string;
    REGEX_DOES_NOT_MATCH: string;
};

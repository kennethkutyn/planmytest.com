{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":";;;;AACA,yCAAsD;AAE/C,IAAM,mBAAmB,GAAG,UAAC,KAAY;IAC9C,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;QAC1B,OAAO;KACR;IACD,IAAI,iBAAiB,GAAG,EAAE,CAAC;IAC3B,IAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAE5D,gBAAgB,CAAC,OAAO,CAAC,UAAC,WAAW;QACnC,IAAI,mCAAuB,CAAC,QAAQ,CAAC,WAAgC,CAAC,EAAE;YACtE,IAAM,4BAA4B,GAChC,KAAK,CAAC,eAAe,IAAK,KAAK,CAAC,eAAe,CAAC,WAAgC,CAAyB,CAAC;YAC5G,iBAAiB,yCACZ,iBAAiB,GACjB,4BAA4B,CAChC,CAAC;SACH;IACH,CAAC,CAAC,CAAC;IACH,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAC;AAlBW,QAAA,mBAAmB,uBAkB9B","sourcesContent":["import { Event, IdentifyOperation } from '@amplitude/analytics-types';\nimport { PROPERTY_ADD_OPERATIONS } from './constants';\n\nexport const parseUserProperties = (event: Event) => {\n  if (!event.user_properties) {\n    return;\n  }\n  let userPropertiesObj = {};\n  const userPropertyKeys = Object.keys(event.user_properties);\n\n  userPropertyKeys.forEach((identifyKey) => {\n    if (PROPERTY_ADD_OPERATIONS.includes(identifyKey as IdentifyOperation)) {\n      const typedUserPropertiesOperation =\n        event.user_properties && (event.user_properties[identifyKey as IdentifyOperation] as Record<string, any>);\n      userPropertiesObj = {\n        ...userPropertiesObj,\n        ...typedUserPropertiesOperation,\n      };\n    }\n  });\n  return userPropertiesObj;\n};\n"]}
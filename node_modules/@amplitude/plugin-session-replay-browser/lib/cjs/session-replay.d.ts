import { BrowserClient, BrowserConfig, EnrichmentPlugin, Event } from '@amplitude/analytics-core';
import { AmplitudeSessionReplay, SessionReplayOptions as SessionReplayBrowserOptions } from '@amplitude/session-replay-browser';
import { SessionReplayOptions } from './typings/session-replay';
export declare class SessionReplayPlugin implements EnrichmentPlugin<BrowserClient, BrowserConfig> {
    static pluginName: string;
    name: string;
    type: "enrichment";
    config: BrowserConfig;
    options: SessionReplayOptions;
    srInitOptions: SessionReplayBrowserOptions;
    sessionReplay: AmplitudeSessionReplay;
    constructor(options?: SessionReplayOptions);
    setup(config: BrowserConfig, _client: BrowserClient): Promise<void>;
    onSessionIdChanged(sessionId: number): Promise<void>;
    onOptOutChanged(optOut: boolean): Promise<void>;
    execute(event: Event): Promise<Event>;
    teardown(): Promise<void>;
    getSessionReplayProperties(): {
        [key: string]: string | boolean | null;
    };
}
export declare const sessionReplayPlugin: (options?: SessionReplayOptions) => EnrichmentPlugin;
//# sourceMappingURL=session-replay.d.ts.map
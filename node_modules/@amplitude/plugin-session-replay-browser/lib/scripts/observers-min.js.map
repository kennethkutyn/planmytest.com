{"version":3,"file":"observers-min.js","sources":["../../../session-replay-browser/lib/esm/observers.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { getGlobalScope } from '@amplitude/analytics-core';\nvar NetworkObservers = /** @class */ (function () {\n    function NetworkObservers() {\n        this.fetchObserver = null;\n    }\n    NetworkObservers.prototype.start = function (eventCallback) {\n        this.eventCallback = eventCallback;\n        this.observeFetch();\n    };\n    NetworkObservers.prototype.stop = function () {\n        var _a;\n        (_a = this.fetchObserver) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.fetchObserver = null;\n        this.eventCallback = undefined;\n    };\n    NetworkObservers.prototype.notifyEvent = function (event) {\n        var _a;\n        (_a = this.eventCallback) === null || _a === void 0 ? void 0 : _a.call(this, event);\n    };\n    NetworkObservers.prototype.observeFetch = function () {\n        var _this = this;\n        var globalScope = getGlobalScope();\n        if (!globalScope)\n            return;\n        var originalFetch = globalScope.fetch;\n        if (!originalFetch)\n            return;\n        globalScope.fetch = function (input, init) { return __awaiter(_this, void 0, void 0, function () {\n            var startTime, requestEvent, response, endTime, headers_1, error_1, endTime, typedError;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        startTime = Date.now();\n                        requestEvent = {\n                            timestamp: startTime,\n                            type: 'fetch',\n                            method: (init === null || init === void 0 ? void 0 : init.method) || 'GET',\n                            url: input.toString(),\n                            requestHeaders: init === null || init === void 0 ? void 0 : init.headers,\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, originalFetch(input, init)];\n                    case 2:\n                        response = _a.sent();\n                        endTime = Date.now();\n                        requestEvent.status = response.status;\n                        requestEvent.duration = endTime - startTime;\n                        headers_1 = {};\n                        response.headers.forEach(function (value, key) {\n                            headers_1[key] = value;\n                        });\n                        requestEvent.responseHeaders = headers_1;\n                        this.notifyEvent(requestEvent);\n                        return [2 /*return*/, response];\n                    case 3:\n                        error_1 = _a.sent();\n                        endTime = Date.now();\n                        requestEvent.duration = endTime - startTime;\n                        typedError = error_1;\n                        requestEvent.error = {\n                            name: typedError.name || 'UnknownError',\n                            message: typedError.message || 'An unknown error occurred',\n                        };\n                        this.notifyEvent(requestEvent);\n                        throw error_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.fetchObserver = function () {\n            globalScope.fetch = originalFetch;\n        };\n    };\n    return NetworkObservers;\n}());\nexport { NetworkObservers };\n//# sourceMappingURL=observers.js.map"],"names":["NetworkObservers","this","fetchObserver","prototype","start","eventCallback","observeFetch","stop","_a","call","undefined","notifyEvent","event","_this","globalScope","getGlobalScope","originalFetch","fetch","input","init","__awaiter","startTime","requestEvent","response","headers_1","error_1","endTime","typedError","__generator","label","Date","now","timestamp","type","method","url","toString","requestHeaders","headers","trys","push","sent","status","duration","forEach","value","key","responseHeaders","error","name","message"],"mappings":"iDAEG,IAACA,EAAkC,WAClC,SAASA,IACLC,KAAKC,cAAgB,IACxB,CAuED,OAtEAF,EAAiBG,UAAUC,MAAQ,SAAUC,GACzCJ,KAAKI,cAAgBA,EACrBJ,KAAKK,cACb,EACIN,EAAiBG,UAAUI,KAAO,WAC9B,IAAIC,EAC0B,QAA7BA,EAAKP,KAAKC,qBAAkC,IAAPM,GAAyBA,EAAGC,KAAKR,MACvEA,KAAKC,cAAgB,KACrBD,KAAKI,mBAAgBK,CAC7B,EACIV,EAAiBG,UAAUQ,YAAc,SAAUC,GAC/C,IAAIJ,EAC0B,QAA7BA,EAAKP,KAAKI,qBAAkC,IAAPG,GAAyBA,EAAGC,KAAKR,KAAMW,EACrF,EACIZ,EAAiBG,UAAUG,aAAe,WACtC,IAAIO,EAAQZ,KACRa,EAAcC,IAClB,GAAKD,EAAL,CAEA,IAAIE,EAAgBF,EAAYG,MAC3BD,IAELF,EAAYG,MAAQ,SAAUC,EAAOC,GAAQ,OAAOC,EAAUP,OAAO,OAAQ,GAAQ,WACjF,IAAIQ,EAAWC,EAAcC,EAAmBC,EAAWC,EAASC,EAASC,EAC7E,OAAOC,EAAY3B,MAAM,SAAUO,GAC/B,OAAQA,EAAGqB,OACP,KAAK,EACDR,EAAYS,KAAKC,MACjBT,EAAe,CACXU,UAAWX,EACXY,KAAM,QACNC,QAASf,aAAmC,EAASA,EAAKe,SAAW,MACrEC,IAAKjB,EAAMkB,WACXC,eAAgBlB,aAAmC,EAASA,EAAKmB,SAErE9B,EAAGqB,MAAQ,EACf,KAAK,EAED,OADArB,EAAG+B,KAAKC,KAAK,CAAC,EAAG,EAAC,CAAI,IACf,CAAC,EAAaxB,EAAcE,EAAOC,IAC9C,KAAK,EAWD,OAVAI,EAAWf,EAAGiC,OACdf,EAAUI,KAAKC,MACfT,EAAaoB,OAASnB,EAASmB,OAC/BpB,EAAaqB,SAAWjB,EAAUL,EAClCG,EAAY,CAAA,EACZD,EAASe,QAAQM,SAAQ,SAAUC,EAAOC,GACtCtB,EAAUsB,GAAOD,CAC7C,IACwBvB,EAAayB,gBAAkBvB,EAC/BvB,KAAKU,YAAYW,GACV,CAAC,EAAcC,GAC1B,KAAK,EAUD,MATAE,EAAUjB,EAAGiC,OACbf,EAAUI,KAAKC,MACfT,EAAaqB,SAAWjB,EAAUL,EAClCM,EAAaF,EACbH,EAAa0B,MAAQ,CACjBC,KAAMtB,EAAWsB,MAAQ,eACzBC,QAASvB,EAAWuB,SAAW,6BAEnCjD,KAAKU,YAAYW,GACXG,EACV,KAAK,EAAG,MAAO,CAAC,GAEpC,GACS,GAAE,EACHxB,KAAKC,cAAgB,WACjBY,EAAYG,MAAQD,CAChC,EAlDmB,CAmDnB,EACWhB,CACX"}
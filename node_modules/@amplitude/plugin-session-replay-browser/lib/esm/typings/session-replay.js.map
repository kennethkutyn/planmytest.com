{"version":3,"file":"session-replay.js","sourceRoot":"","sources":["../../../src/typings/session-replay.ts"],"names":[],"mappings":"","sourcesContent":["import { Event } from '@amplitude/analytics-core';\nimport {\n  StoreType,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  type SessionReplayOptions as StandaloneSessionReplayOptions, // used for documentation\n} from '@amplitude/session-replay-browser';\n\nexport type MaskLevel =\n  | 'light' // only mask a subset of inputs thatâ€™s deemed sensitive - password, credit card, telephone #, email. These are information we never want to capture.\n  | 'medium' // mask all inputs\n  | 'conservative'; // mask all inputs and all texts\n\nexport interface SessionReplayPrivacyConfig {\n  blockSelector?: string | string[];\n  defaultMaskLevel?: MaskLevel;\n  maskSelector?: string[];\n  unmaskSelector?: string[];\n}\n\nexport interface SessionReplayPerformanceConfig {\n  enabled: boolean;\n  timeout?: number;\n}\n\n/**\n * UGC filter rule.\n */\nexport type UGCFilterRule = {\n  /**\n   * The selector of the UGC element.\n   */\n  selector: string;\n  /**\n   * The replacement text for the UGC element.\n   */\n  replacement: string;\n};\n\nexport interface SessionReplayInteractionConfig {\n  trackEveryNms?: number;\n  enabled: boolean; // defaults to false\n  batch: boolean; // defaults to false\n  /**\n   * UGC filter rules.\n   */\n  ugcFilterRules?: UGCFilterRule[];\n}\n\nexport interface SessionReplayOptions {\n  /**\n   * @see {@link StandaloneSessionReplayOptions.sampleRate}\n   */\n  sampleRate?: number;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.privacyConfig}\n   */\n  privacyConfig?: SessionReplayPrivacyConfig;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.debugMode}\n   */\n  debugMode?: boolean;\n  /**\n   * If this is enabled we will force the browser SDK to also send start and end session events.\n   */\n  forceSessionTracking?: boolean;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.configServerUrl}\n   */\n  configServerUrl?: string;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.trackServerUrl}\n   */\n  trackServerUrl?: string;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.shouldInlineStylesheet}\n   */\n  shouldInlineStylesheet?: boolean;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.performanceConfig}\n   */\n  performanceConfig?: SessionReplayPerformanceConfig;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.storeType}\n   */\n  storeType?: StoreType;\n  /**\n   * Override the device ID for session replay.\n   */\n  deviceId?: string;\n  /**\n   * Dynamically overrides the session ID for replay. Ensure stability to avoid frequent restarts.\n   * @param event Browser SDK event\n   * @returns The session ID for the session replay.\n   */\n  customSessionId?: (event: Event) => string | undefined;\n  /**\n   * @see {@link StandaloneSessionReplayOptions.experimental}\n   */\n  experimental?: {\n    useWebWorker: boolean;\n  };\n  /**\n   * @see {@link StandaloneSessionReplayOptions.omitElementTags}\n   */\n  omitElementTags?: {\n    script?: boolean;\n    comment?: boolean;\n  };\n  /**\n   * If true, applies a background color to blocked elements for visual masking. Defaults to false.\n   */\n  applyBackgroundColorToBlockedElements?: boolean;\n\n  interactionConfig?: SessionReplayInteractionConfig;\n\n  /**\n   * Enables URL change polling as a fallback for SPA route tracking.\n   * When enabled, the SDK will periodically check for URL changes every second\n   * in addition to patching the History API. This is useful for edge cases where\n   * route changes might bypass the standard History API methods.\n   *\n   * @defaultValue false\n   */\n  enableUrlChangePolling?: boolean;\n  /**\n   * Specifies the interval in milliseconds for URL change polling when enableUrlChangePolling is true.\n   * The SDK will check for URL changes at this interval as a fallback for SPA route tracking.\n   *\n   * @defaultValue 1000\n   */\n  urlChangePollingInterval?: number;\n  /**\n   * Whether to capture document title in URL change events.\n   * When disabled, the title field will be empty in URL change events.\n   *\n   * @defaultValue false\n   */\n  captureDocumentTitle?: boolean;\n}\n"]}
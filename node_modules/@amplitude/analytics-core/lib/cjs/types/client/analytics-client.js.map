{"version":3,"file":"analytics-client.js","sourceRoot":"","sources":["../../../../src/types/client/analytics-client.ts"],"names":[],"mappings":"","sourcesContent":["import { AnalyticsIdentity } from '../plugin';\n\n/**\n * Generic analytics client interface adaptable to any analytics provider (e.g., Segment, Amplitude) with configurable identity type.\n *\n * Note: This interface is intended for client-side use only (e.g., browser SDK, React Native SDK).\n * It is not designed for use with the Node.js SDK.\n */\nexport interface AnalyticsClient<Identity extends AnalyticsIdentity = AnalyticsIdentity> {\n  /**\n   * Returns the current identity.\n   *\n   * ```typescript\n   * const identity = getIdentity();\n   * ```\n   */\n  getIdentity(): Identity;\n\n  /**\n   * Returns the current session identifier.\n   *\n   * ```typescript\n   * const sessionId = getSessionId();\n   * ```\n   */\n  getSessionId(): number | undefined;\n\n  /**\n   * Returns the current optOut config value.\n   *\n   * ```typescript\n   * const optOut = getOptOut();\n   * ```\n   */\n  getOptOut(): boolean | undefined;\n\n  /**\n   * Tracks an event with the specified type and optional properties.\n   *\n   * @param eventType - The type/name of the event to track\n   * @param eventProperties - Optional properties to attach to the event\n   */\n  track(eventType: string, eventProperties?: Record<string, any>): void;\n}\n"]}
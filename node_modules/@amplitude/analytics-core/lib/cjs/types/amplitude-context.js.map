{"version":3,"file":"amplitude-context.js","sourceRoot":"","sources":["../../../src/types/amplitude-context.ts"],"names":[],"mappings":";;;AACA,gEAAoE;AACpE,oCAA4C;AAC5C,uCAAsC;AACtC,yCAAoD;AAEpD;;;;GAIG;AACH;IAOE,0BACE,MAAc,EACd,YAA4C,EAC5C,UAAiC,EACjC,MAAgB;QAFhB,6BAAA,EAAA,eAAuB,iCAAqB;QAC5C,2BAAA,EAAA,iBAAiC;QAGjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,MAAM,EAAE;YACX,IAAM,aAAa,GAAG,IAAI,eAAM,EAAE,CAAC;YACnC,aAAa,CAAC,MAAM,CAAC,mBAAQ,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,kCAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9F,CAAC;IAGH,uBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,4CAAgB","sourcesContent":["import { ServerZoneType } from './server-zone';\nimport { RemoteConfigClient } from '../remote-config/remote-config';\nimport { ILogger, Logger } from '../logger';\nimport { LogLevel } from './loglevel';\nimport { DEFAULT_INSTANCE_NAME } from './constants';\n\n/**\n * @experimental\n * AmplitudeContext holds the core configuration and dependencies for an Amplitude instance.\n * This includes API key, instance name, server zone, remote config client, and logger.\n */\nexport class AmplitudeContext {\n  public readonly apiKey: string;\n  public readonly instanceName: string;\n  public readonly serverZone: ServerZoneType;\n  public readonly remoteConfigClient: RemoteConfigClient;\n  public readonly logger: ILogger;\n\n  constructor(\n    apiKey: string,\n    instanceName: string = DEFAULT_INSTANCE_NAME,\n    serverZone: ServerZoneType = 'US',\n    logger?: ILogger,\n  ) {\n    this.apiKey = apiKey;\n    this.instanceName = instanceName;\n    this.serverZone = serverZone;\n\n    if (!logger) {\n      const defaultLogger = new Logger();\n      defaultLogger.enable(LogLevel.Error);\n      this.logger = defaultLogger;\n    } else {\n      this.logger = logger;\n    }\n\n    this.remoteConfigClient = new RemoteConfigClient(this.apiKey, this.logger, this.serverZone);\n  }\n\n  // TODO: Diagnostics, etc...\n}\n"]}